{"ast":null,"code":"export function matchPasswordsValidator(passwordControlName, rePasswordControlName) {\n  return control => {\n    const passFirstControl = control.get(passwordControlName);\n    const passSecondControl = control.get(rePasswordControlName);\n    console.log({\n      passFirst: passFirstControl,\n      passSecond: passSecondControl\n    });\n    const areMatching = passFirstControl?.value == passSecondControl?.value;\n    return areMatching ? null : {\n      matchPasswordsValidator: true\n    };\n  };\n}","map":{"version":3,"names":["matchPasswordsValidator","passwordControlName","rePasswordControlName","control","passFirstControl","get","passSecondControl","console","log","passFirst","passSecond","areMatching","value"],"sources":["E:\\Code\\Angular\\Angular\\workshop-forms\\my-app\\src\\app\\modules\\shared\\utils\\match-passwords-validator.ts"],"sourcesContent":["import { ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function matchPasswordsValidator(passwordControlName: string, rePasswordControlName: string): ValidatorFn {\r\n    \r\n\r\n    return (control) => {\r\n\r\n        const passFirstControl = control.get(passwordControlName);\r\n        const passSecondControl = control.get(rePasswordControlName);\r\n\r\n        console.log({passFirst: passFirstControl, passSecond: passSecondControl });\r\n\r\n        const areMatching = passFirstControl?.value == passSecondControl?.value\r\n        \r\n\r\n        return areMatching ? null : { matchPasswordsValidator: true };\r\n\r\n    };\r\n}"],"mappings":"AAEA,OAAM,SAAUA,uBAAuBA,CAACC,mBAA2B,EAAEC,qBAA6B;EAG9F,OAAQC,OAAO,IAAI;IAEf,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,GAAG,CAACJ,mBAAmB,CAAC;IACzD,MAAMK,iBAAiB,GAAGH,OAAO,CAACE,GAAG,CAACH,qBAAqB,CAAC;IAE5DK,OAAO,CAACC,GAAG,CAAC;MAACC,SAAS,EAAEL,gBAAgB;MAAEM,UAAU,EAAEJ;IAAiB,CAAE,CAAC;IAE1E,MAAMK,WAAW,GAAGP,gBAAgB,EAAEQ,KAAK,IAAIN,iBAAiB,EAAEM,KAAK;IAGvE,OAAOD,WAAW,GAAG,IAAI,GAAG;MAAEX,uBAAuB,EAAE;IAAI,CAAE;EAEjE,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}