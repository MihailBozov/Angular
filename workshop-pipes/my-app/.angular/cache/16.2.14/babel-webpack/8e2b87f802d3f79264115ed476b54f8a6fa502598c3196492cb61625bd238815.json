{"ast":null,"code":"import { NG_VALIDATORS } from '@angular/forms';\nimport { emailValidator } from '../utils/email-validator';\nimport * as i0 from \"@angular/core\";\nexport class EmailDirective {\n  constructor() {\n    this.appEmail = [];\n    this.validator = () => null;\n  }\n  ngOnChanges(changes) {\n    console.log('changes:', changes['appEmail']);\n    const {\n      currentValue\n    } = changes['appEmail'];\n    console.log('Current value:', currentValue);\n    if (currentValue?.length) {\n      this.validator = emailValidator(currentValue);\n    }\n  }\n  validate(control) {\n    // console.log('control: ', control)\n    return null;\n  }\n  static #_ = this.ɵfac = function EmailDirective_Factory(t) {\n    return new (t || EmailDirective)();\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: EmailDirective,\n    selectors: [[\"\", \"appEmail\", \"\"]],\n    inputs: {\n      appEmail: \"appEmail\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALIDATORS,\n      useExisting: EmailDirective,\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}","map":{"version":3,"names":["NG_VALIDATORS","emailValidator","EmailDirective","constructor","appEmail","validator","ngOnChanges","changes","console","log","currentValue","length","validate","control","_","_2","selectors","inputs","features","i0","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature"],"sources":["E:\\Code\\Angular\\Angular\\workshop-forms\\my-app\\src\\app\\modules\\shared\\validators\\email.directive.ts"],"sourcesContent":["import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\nimport { emailValidator } from '../utils/email-validator';\n\n@Directive({\n  selector: '[appEmail]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: EmailDirective,\n      multi: true\n    }\n  ]\n})\nexport class EmailDirective implements Validator, OnChanges{\n\n@Input() appEmail: string[] = [];\n\n  constructor() { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    console.log('changes:', changes['appEmail']);\n\n    const {currentValue} = changes['appEmail'];\n\n    console.log('Current value:', currentValue)\n\n    if(currentValue?.length) {\n      this.validator = emailValidator(currentValue)\n    }\n  }\n\nvalidator: ValidatorFn = () => null;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    // console.log('control: ', control)\n    return null;\n  }\n\n\n}\n"],"mappings":"AACA,SAA0BA,aAAa,QAAkD,gBAAgB;AACzG,SAASC,cAAc,QAAQ,0BAA0B;;AAYzD,OAAM,MAAOC,cAAc;EAIzBC,YAAA;IAFO,KAAAC,QAAQ,GAAa,EAAE;IAgBhC,KAAAC,SAAS,GAAgB,MAAM,IAAI;EAdjB;EAEhBC,WAAWA,CAACC,OAAsB;IAChCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,OAAO,CAAC,UAAU,CAAC,CAAC;IAE5C,MAAM;MAACG;IAAY,CAAC,GAAGH,OAAO,CAAC,UAAU,CAAC;IAE1CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEC,YAAY,CAAC;IAE3C,IAAGA,YAAY,EAAEC,MAAM,EAAE;MACvB,IAAI,CAACN,SAAS,GAAGJ,cAAc,CAACS,YAAY,CAAC;;EAEjD;EAIAE,QAAQA,CAACC,OAAwB;IAC/B;IACA,OAAO,IAAI;EACb;EAAC,QAAAC,CAAA,G;qBAvBUZ,cAAc;EAAA;EAAA,QAAAa,EAAA,G;UAAdb,cAAc;IAAAc,SAAA;IAAAC,MAAA;MAAAb,QAAA;IAAA;IAAAc,QAAA,GAAAC,EAAA,CAAAC,kBAAA,CARd,CACT;MACEC,OAAO,EAAErB,aAAa;MACtBsB,WAAW,EAAEpB,cAAc;MAC3BqB,KAAK,EAAE;KACR,CACF,GAAAJ,EAAA,CAAAK,oBAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}