{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.USER_KEY = '[user]';\n    try {\n      const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\n      this.user = JSON.parse(localStorageUser);\n    } catch {\n      this.user = undefined;\n    }\n  }\n  login() {\n    this.user = {\n      firstName: 'sand',\n      email: 'sand@gmail.com',\n      phoneNumber: '0885',\n      password: '1212',\n      id: '5fa64ca72183ce1728ff3726'\n    };\n    localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\n  }\n  logout() {\n    this.user = undefined;\n    localStorage.removeItem(this.USER_KEY);\n  }\n  get isLoggedIn() {\n    return !!this.user;\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","USER_KEY","localStorageUser","localStorage","getItem","user","JSON","parse","undefined","login","firstName","email","phoneNumber","password","id","setItem","stringify","logout","removeItem","isLoggedIn","_","_2","factory","ɵfac","providedIn"],"sources":["E:\\Code\\Angular\\Angular\\workshop-pipes\\my-app\\src\\app\\modules\\user\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { UserAuth } from 'src/app/types/userAuth';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  user: UserAuth | undefined;\r\n  USER_KEY: string = '[user]';\r\n\r\n  constructor() {\r\n    try {\r\n      const localStorageUser = localStorage.getItem(this.USER_KEY) || '';\r\n      this.user = JSON.parse(localStorageUser);\r\n    } catch {\r\n      this.user = undefined;\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.user = {\r\n      firstName: 'sand',\r\n      email: 'sand@gmail.com',\r\n      phoneNumber: '0885',\r\n      password: '1212',\r\n      id: '5fa64ca72183ce1728ff3726'\r\n    }\r\n    \r\n    localStorage.setItem(this.USER_KEY, JSON.stringify(this.user));\r\n  }\r\n\r\n  logout() {\r\n    this.user = undefined;\r\n    localStorage.removeItem(this.USER_KEY);\r\n  }\r\n  \r\n  get isLoggedIn():boolean {\r\n    return !!this.user;\r\n  }\r\n  \r\n\r\n}\r\n"],"mappings":";AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAA;IAFA,KAAAC,QAAQ,GAAW,QAAQ;IAGzB,IAAI;MACF,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACH,QAAQ,CAAC,IAAI,EAAE;MAClE,IAAI,CAACI,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;KACzC,CAAC,MAAM;MACN,IAAI,CAACG,IAAI,GAAGG,SAAS;;EAEzB;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACJ,IAAI,GAAG;MACVK,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE,gBAAgB;MACvBC,WAAW,EAAE,MAAM;MACnBC,QAAQ,EAAE,MAAM;MAChBC,EAAE,EAAE;KACL;IAEDX,YAAY,CAACY,OAAO,CAAC,IAAI,CAACd,QAAQ,EAAEK,IAAI,CAACU,SAAS,CAAC,IAAI,CAACX,IAAI,CAAC,CAAC;EAChE;EAEAY,MAAMA,CAAA;IACJ,IAAI,CAACZ,IAAI,GAAGG,SAAS;IACrBL,YAAY,CAACe,UAAU,CAAC,IAAI,CAACjB,QAAQ,CAAC;EACxC;EAEA,IAAIkB,UAAUA,CAAA;IACZ,OAAO,CAAC,CAAC,IAAI,CAACd,IAAI;EACpB;EAAC,QAAAe,CAAA,G;qBAhCUrB,WAAW;EAAA;EAAA,QAAAsB,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}