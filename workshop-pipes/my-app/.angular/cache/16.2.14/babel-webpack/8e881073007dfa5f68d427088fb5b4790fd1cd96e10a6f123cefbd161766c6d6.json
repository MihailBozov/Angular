{"ast":null,"code":"export function emailValidator(domains) {\n  const domainString = domains.join('|');\n  const regExp = new RegExp(`^[A-Za-z0-9]+@gmail\\.(${domainString})$`);\n  return control => {\n    const isEmailInvalid = control.value === '' || regExp.test(control.value);\n    return isEmailInvalid ? null : {\n      emailValidator: true\n    };\n  };\n}","map":{"version":3,"names":["emailValidator","domains","domainString","join","regExp","RegExp","control","isEmailInvalid","value","test"],"sources":["E:\\Code\\Angular\\Angular\\workshop-forms\\my-app\\src\\app\\modules\\shared\\utils\\email-validator.ts"],"sourcesContent":["import { AbstractControl, ValidatorFn } from \"@angular/forms\"\r\n\r\nexport function emailValidator(domains: string[]): ValidatorFn {\r\n    \r\n    const domainString = domains.join('|')\r\n    const regExp = new RegExp(`^[A-Za-z0-9]+@gmail\\.(${domainString})$`)\r\n\r\n    return (control: AbstractControl) => {\r\n        const isEmailInvalid = control.value === '' || regExp.test(control.value)\r\n        return isEmailInvalid ? null : { emailValidator: true }\r\n    }\r\n  }"],"mappings":"AAEA,OAAM,SAAUA,cAAcA,CAACC,OAAiB;EAE5C,MAAMC,YAAY,GAAGD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC;EACtC,MAAMC,MAAM,GAAG,IAAIC,MAAM,CAAC,yBAAyBH,YAAY,IAAI,CAAC;EAEpE,OAAQI,OAAwB,IAAI;IAChC,MAAMC,cAAc,GAAGD,OAAO,CAACE,KAAK,KAAK,EAAE,IAAIJ,MAAM,CAACK,IAAI,CAACH,OAAO,CAACE,KAAK,CAAC;IACzE,OAAOD,cAAc,GAAG,IAAI,GAAG;MAAEP,cAAc,EAAE;IAAI,CAAE;EAC3D,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}