{"ast":null,"code":"export function matchPasswordsValidator(passwordControlName, rePasswordControlName) {\n  return control => {\n    console.log(control);\n    return null;\n    // const passFirstControl = control.get(passwordControlName);\n    // const passSecondControl = control.get(rePasswordControlName);\n    // console.log({passFirst: passFirstControl, passSecond: passSecondControl });\n    // const areMatching = passFirstControl?.value === passSecondControl?.value\n    // return areMatching ? null : { matchPasswordsValidator: true };\n  };\n}","map":{"version":3,"names":["matchPasswordsValidator","passwordControlName","rePasswordControlName","control","console","log"],"sources":["E:\\Code\\Angular\\Angular\\workshop-forms\\my-app\\src\\app\\modules\\shared\\utils\\match-passwords-validator.ts"],"sourcesContent":["import { ValidatorFn } from \"@angular/forms\";\r\n\r\nexport function matchPasswordsValidator(passwordControlName: string, rePasswordControlName: string): ValidatorFn {\r\n    \r\n\r\n    return (control) => {\r\n\r\n        console.log(control)\r\n        return null\r\n\r\n        // const passFirstControl = control.get(passwordControlName);\r\n        // const passSecondControl = control.get(rePasswordControlName);\r\n\r\n        // console.log({passFirst: passFirstControl, passSecond: passSecondControl });\r\n\r\n        // const areMatching = passFirstControl?.value === passSecondControl?.value\r\n        \r\n\r\n        // return areMatching ? null : { matchPasswordsValidator: true };\r\n\r\n    };\r\n}"],"mappings":"AAEA,OAAM,SAAUA,uBAAuBA,CAACC,mBAA2B,EAAEC,qBAA6B;EAG9F,OAAQC,OAAO,IAAI;IAEfC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,OAAO,IAAI;IAEX;IACA;IAEA;IAEA;IAGA;EAEJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}